kubectl create secret generic jwt-secret --from-literal=JWT_KEY=asdf
thisisunsafe
npm run dev (=> client)

(inside common) npm run pub

run test: npm run test

kubectl create secret generic stripe-secret --from-literal STRIPE_KEY=(secret Key of stripe developer page) // payments sercvice

CI/CD:
1 repo for the project 
github action: 
actions 
    simple workflow

//////////////////////////////////////// IN THE FILE
    rename tests.yaml
    name: tests
    on: 
        pull_request
            paths:
                - 'auth/**' // only runs the test if we push a change in that path
    jobs:
        build:
            runs-on: ubuntu-latest
            steps:
                - uses: actions/checkout@v2
                - run: cd auth && npm install && npm run test:ci



////////////////////////////////////////

start commit 
"test:ci": "jest"  (add this line in the scripts section of package.json) 

replicate the file to test all of the services 


NEW WORKFLOW:

///////////////////////////////////////////
rename: deploy-(service).yaml

name: deploy-(service)

on:
    push:
        branches:
            - master
        paths:
            - '(services-path)/**'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - run: cd auth && docker build --tag ser0710/(service) . // settings -> secrets -> password and username for dockerhub  (in 2 secrets)
            - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
              env:
                DOCKER_USERNAME: ${{ secrets.(name of docker username secret) }}
                DOCKER_PASSWORD: ${{ secrets.(name of docker password secret) }}
            - run: docker push ser0710/(service)
            - uses: .... (digital ocean things)
///////////////////////////////////////////


///////////////////////////////////////////
New file: deploy-manifest.yaml

name: deploy-manifest

on:
    push:
        branches:
            - master
        paths:
            - 'infra/**'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: .... (digital ocean things)
            - run: kubectl apply -f infra/k8s

